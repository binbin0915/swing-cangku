/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;

import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;

import dao.CangkuDao;
import dao.LingjianDao;
import entity.Cangku;
import entity.Lingjian;

/**
 *
 * @author asus pc
 */
public class View3 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public View3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addBGY = new javax.swing.JButton();
        deleteBGY = new javax.swing.JButton();
        findAllBGY = new javax.swing.JButton();
        findByBGYNum = new javax.swing.JButton();
        findByCKNum = new javax.swing.JButton();
        BGYName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BGYNum = new javax.swing.JTextField();
        BGYCKNum = new javax.swing.JTextField();
        BGYT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        BGYViewJump = new javax.swing.JMenuItem();
        LJViewJump = new javax.swing.JMenuItem();
        KCViewJump = new javax.swing.JMenuItem();
        CKViewJump = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addBGY.setText("添加一个新的仓库");
        addBGY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBGYActionPerformed(evt);
            }

        });
        deleteBGY.setText("按仓库号删除");
        deleteBGY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBGYActionPerformed(evt);
            }

        });
        findAllBGY.setText("通过仓库名字删除");
        findAllBGY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAllBGYActionPerformed(evt);
            }
        });

        findByBGYNum.setText("无条件查询所有仓库");
        findByBGYNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	findByBGYNumActionPerformed(evt);
            }
        });
        findByCKNum.setText("通过仓库号找仓库");
        findByCKNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	findByCKNumNumActionPerformed(evt);
            }
        });
        BGYT.setText("通过名字找仓库");
        BGYT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	findByNameActionPerformed(evt);
            }
        });

        jLabel2.setText("仓库号");

        jLabel1.setText("仓库名");

        jLabel3.setText("暂无");
        
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BGYCKNum))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(BGYName, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(BGYNum)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(findByBGYNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBGY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteBGY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(findByCKNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(findAllBGY, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(BGYT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(197, 197, 197))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BGYNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBGY)
                    .addComponent(deleteBGY)
                    .addComponent(findAllBGY)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BGYName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(BGYCKNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findByBGYNum)
                            .addComponent(findByCKNum)
                            .addComponent(BGYT))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        init();
        try {
			start(4);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
        

        jMenu1.setText("文件");

        BGYViewJump.setText("保管员管理");
        BGYViewJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BGYViewJumpActionPerformed(evt);
            }
        });
        jMenu1.add(BGYViewJump);

        LJViewJump.setText("零件管理");
        LJViewJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LJViewJumpActionPerformed(evt);
            }
        });
        jMenu1.add(LJViewJump);

        KCViewJump.setText("库存管理");
        KCViewJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KCViewJumpActionPerformed(evt);
            }
        });
        jMenu1.add(KCViewJump);

        CKViewJump.setText("仓库管理");
        CKViewJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CKViewJumpActionPerformed(evt);
            }
        });
        jMenu1.add(CKViewJump);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(44, 44, 44)))
                .addGap(446, 446, 446))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>                        

private void BGYViewJumpActionPerformed(java.awt.event.ActionEvent evt) {                                            
	OpenView.view=new View();
	OpenView.view.show();
	OpenView.view3.dispose();
    }   
    private void LJViewJumpActionPerformed(java.awt.event.ActionEvent evt) {  
    	OpenView.view1=new View1();
    	OpenView.view1.show();
    	OpenView.view3.dispose();
    }  
    private void KCViewJumpActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	OpenView.view2=new View2();
    	OpenView.view2.show();
    	OpenView.showBGY=new ShowBGY();
    	OpenView.showBGY.doshow();
    	OpenView.view3.dispose();
    } 
    private void CKViewJumpActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	
    } 
            
                                  

    private void findAllBGYActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
			start(3);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
    }   
    private void addBGYActionPerformed(java.awt.event.ActionEvent evt) {                                           
        try {
			start(1);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
    }    
    private void deleteBGYActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
			start(2);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
    }   
    private void findByBGYNumActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
			start(4);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
    }  
    private void findByCKNumNumActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
			start(5);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
    }  
    private void findByNameActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
			start(6);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
    }  
    
    

    public void init(){
		records = new Vector();	//实例化向量
		tm = new AbstractTableModel(){
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			public int getColumnCount(){
				return titles.length;	//取得表格列数
			}
			public int getRowCount(){
				return records.size();		//取得表格行数
			}
			public Object getValueAt(int row,int column){
				if(!records.isEmpty())		//取得单元格中的属性值
					return ((Vector)records.elementAt(row)).elementAt(column);
				else
					return null;
			}
			public String getColumnName(int column){
				return titles[column];	//设置表格列名
			}
			public void setValueAt(Object value,int row,int column){
					//数据模型不可编辑，该方法设置为空
			}
			public Class getColumnClass(int c){
				return getValueAt(0,c).getClass();	//取得列所属对象类
			}
			public boolean isCellEditable(int row,int column){
				return false;//设置单元格不可编辑，为缺省实现
			}
		};
	}
	public void start(int types) throws SQLException, ClassNotFoundException{
		titles = new String[]{"仓库号","仓库名"};
		CangkuDao dao= new CangkuDao();
		records.removeAllElements();//初始化向量对象
		Vector<String> vtemp ;
		if(types==1){//添加一个新的零件
			Cangku ck=new Cangku();
			ck.setCknum(BGYNum.getText());
			ck.setCkname(BGYName.getText());
			dao.add(ck);
			ArrayList<Cangku> temp = dao.findAll();
			for(Cangku s:temp){
				vtemp= new Vector<String>();
				vtemp.add(s.getCknum());
				vtemp.add(s.getCkname());
				records.add(vtemp);
			}
		}else if(types==2){//通过id删除
			Cangku ck=new Cangku();
			ck.setCknum(BGYNum.getText());
			ck.setCkname(BGYName.getText());
			dao.deleteById(ck);
			ArrayList<Cangku> temp = dao.findAll();
			for(Cangku s:temp){
				vtemp= new Vector<String>();
				vtemp.add(s.getCknum());
				vtemp.add(s.getCkname());
				records.add(vtemp);
			}
		}else if(types==3){//通过名字删除
			Cangku ck=new Cangku();
			ck.setCknum(BGYNum.getText());
			ck.setCkname(BGYName.getText());
			dao.deleteByName(ck);
			ArrayList<Cangku> temp = dao.findAll();
			for(Cangku s:temp){
				vtemp= new Vector<String>();
				vtemp.add(s.getCknum());
				vtemp.add(s.getCkname());
				records.add(vtemp);
			}
		}else if(types==4){//无条件查询所有零件
			ArrayList<Cangku> temp = dao.findAll();
			for(Cangku s:temp){
				vtemp= new Vector<String>();
				vtemp.add(s.getCknum());
				vtemp.add(s.getCkname());
				records.add(vtemp);
			}
		}
		else if(types==5){//按零件号查询
			Cangku ck=new Cangku();
			ck.setCknum(BGYNum.getText());
			ck.setCkname(BGYName.getText());
			Cangku s=dao.findById(ck);
			vtemp= new Vector<String>();
			vtemp.add(s.getCknum());
			vtemp.add(s.getCkname());
			records.add(vtemp);
			
		}else if (types==6){
			Cangku ck=new Cangku();
			ck.setCknum(BGYNum.getText());
			ck.setCkname(BGYName.getText());
			Cangku s =dao.findByName(ck);
			vtemp= new Vector<String>();
			vtemp.add(s.getCknum());
			vtemp.add(s.getCkname());
			records.add(vtemp);
		}

		//定制表格： 
		jTable1=new JTable(tm);	//生成自己的数据模型
		
		jTable1.setToolTipText("显示全部查询结果");	//设置帮助提示
		//jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);	//设置表格调整尺寸模式
		jTable1.setCellSelectionEnabled(false);	//设置单元格选择方式
		jTable1.setShowVerticalLines(true);
		jTable1.setShowHorizontalLines(true);
		jScrollPane1=new JScrollPane(jTable1);		//给表格加上滚动条
		
		add(jScrollPane1);
		for(int i=0;i<titles.length;i++){
			jTable1.getColumnModel().getColumn(i).setHeaderValue(titles[i]);
		}
		tm.fireTableStructureChanged();//更新表格
		
	}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	OpenView.view3=new View3();
            	OpenView.view3.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField BGYCKNum;
    private javax.swing.JTextField BGYName;
    private javax.swing.JTextField BGYNum;
    private javax.swing.JButton BGYT;
    private javax.swing.JMenuItem BGYViewJump;
    private javax.swing.JMenuItem CKViewJump;
    private javax.swing.JMenuItem KCViewJump;
    private javax.swing.JMenuItem LJViewJump;
    private javax.swing.JButton addBGY;
    private javax.swing.JButton deleteBGY;
    private javax.swing.JButton findAllBGY;
    private javax.swing.JButton findByBGYNum;
    private javax.swing.JButton findByCKNum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private AbstractTableModel tm;		//声明一个类AbstractTableModel对象
    String titles[];			//二维表列名
	Vector records;				//声明一个向量对象
    // End of variables declaration                   
}
